package com.test.uni;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Student <br>
 * @version generated on Wed Sep 24 17:41:25 EDT 2014 by rbara012
 */

public interface Student extends Person {

    /* ***************************************************
     * Property http://people.cis.fiu.edu/~rbaral/university.owl#studies
     */
     
    /**
     * Gets all property values for the studies property.<p>
     * 
     * @returns a collection of values for the studies property.
     */
    Collection<? extends Module> getStudies();

    /**
     * Checks if the class has a studies property value.<p>
     * 
     * @return true if there is a studies property value.
     */
    boolean hasStudies();

    /**
     * Adds a studies property value.<p>
     * 
     * @param newStudies the studies property value to be added
     */
    void addStudies(Module newStudies);

    /**
     * Removes a studies property value.<p>
     * 
     * @param oldStudies the studies property value to be removed.
     */
    void removeStudies(Module oldStudies);


    /* ***************************************************
     * Property http://people.cis.fiu.edu/~rbaral/university.owl#first_name
     */
     
    /**
     * Gets all property values for the first_name property.<p>
     * 
     * @returns a collection of values for the first_name property.
     */
    Collection<? extends String> getFirst_name();

    /**
     * Checks if the class has a first_name property value.<p>
     * 
     * @return true if there is a first_name property value.
     */
    boolean hasFirst_name();

    /**
     * Adds a first_name property value.<p>
     * 
     * @param newFirst_name the first_name property value to be added
     */
    void addFirst_name(String newFirst_name);

    /**
     * Removes a first_name property value.<p>
     * 
     * @param oldFirst_name the first_name property value to be removed.
     */
    void removeFirst_name(String oldFirst_name);



    /* ***************************************************
     * Property http://people.cis.fiu.edu/~rbaral/university.owl#last_name
     */
     
    /**
     * Gets all property values for the last_name property.<p>
     * 
     * @returns a collection of values for the last_name property.
     */
    Collection<? extends String> getLast_name();

    /**
     * Checks if the class has a last_name property value.<p>
     * 
     * @return true if there is a last_name property value.
     */
    boolean hasLast_name();

    /**
     * Adds a last_name property value.<p>
     * 
     * @param newLast_name the last_name property value to be added
     */
    void addLast_name(String newLast_name);

    /**
     * Removes a last_name property value.<p>
     * 
     * @param oldLast_name the last_name property value to be removed.
     */
    void removeLast_name(String oldLast_name);



    /* ***************************************************
     * Property http://people.cis.fiu.edu/~rbaral/university.owl#student_id
     */
     
    /**
     * Gets all property values for the student_id property.<p>
     * 
     * @returns a collection of values for the student_id property.
     */
    Collection<? extends Integer> getStudent_id();

    /**
     * Checks if the class has a student_id property value.<p>
     * 
     * @return true if there is a student_id property value.
     */
    boolean hasStudent_id();

    /**
     * Adds a student_id property value.<p>
     * 
     * @param newStudent_id the student_id property value to be added
     */
    void addStudent_id(Integer newStudent_id);

    /**
     * Removes a student_id property value.<p>
     * 
     * @param oldStudent_id the student_id property value to be removed.
     */
    void removeStudent_id(Integer oldStudent_id);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
